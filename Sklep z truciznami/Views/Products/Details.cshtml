@*@model Sklep_z_truciznami.Models.Product*@
@model Sklep_z_truciznami.Models.Details

@{
    ViewBag.Title = "Szczegóły produktu";
}

<h2 style="margin-top:30px">@Html.DisplayFor(model => model.Product.ProductName)</h2>

<div>
    <hr />
    <div class="row">
        <div class="col-sm-5 col-md-5" style="margin-right:15px">
            <img class="thumbnail" src=@Url.Action("Show", "Products", new { id = @Model.Product.ProductId } ) alt="@Model.Product.ProductName" />
        </div>
        <div class="row col-sm-6 col-md-6" style="margin-left:15px;padding-left:0">
            <div>
                <ul class="list-group" style="width:60%">
                    <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.Product.Tags):</b> @Html.DisplayFor(model => model.Product.Tags)</li>
                    <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.Product.Quantity):</b> @Html.DisplayFor(model => model.Product.Quantity)</li>
                    <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.Product.Unit):</b> @EnumsHelper.GetName(Model.Product.Unit)</li>
                    <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.Product.Category):</b> @EnumsHelper.GetName(Model.Product.Category)</li>
                    <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.Product.Price):</b> @Html.DisplayFor(model => model.Product.Price) zł</li>
                    <li class="list-group-item">
                        <span class="badge">
                            @if (Model.Product.RatingNumber != 0)
                            {
                                <b>@(Model.Product.RatingSum / Model.Product.RatingNumber)</b>
                            }
                            else
                            {
                                <b>@Model.Product.RatingSum</b>
                            }

                        </span>
                        <b>Średnia ocena:</b>
                    </li>
                    <li class="list-group-item">
                        <span class="badge">@Html.DisplayFor(model => model.Product.RatingNumber)</span>
                        <b>Ilość ocen:</b>
                    </li>
                    <li class="list-group-item" style="height:51px">
                        @using (Html.BeginForm("AddRating", "Products", new { id = @Model.Product.ProductId }, FormMethod.Post, null))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group" style="padding-left:15px">

                                    <div>
                                        @Html.ValidationMessageFor(model => model.Rating.Rate, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.Rating.Rate, new { htmlAttributes = new { @class = "form-control", @style = "height:30px;width:70px;vertical-align:top;display:inline-block;" } })
                                        <button type="submit" class="btn btn-primary" style="display:inline-block;">
                                            <span>Oceń</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </li>
                </ul>
                <div style="padding-left:3px;padding-top:10px;padding-bottom:20px;">
                    @using (@Html.BeginForm("AddProductToCart", "Order"))
                    {
                        @Html.Hidden("productID", Model.Product.ProductId)
                        <span>@Html.Editor("quantity", new { min = 0, max = Model.Product.Quantity, @style = "height:width:30px;width:30px" })</span>
                        <span>szt.</span>
                        <button type="submit" class="btn btn-primary">
                            Dodaj do koszyka
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-body">
            @Html.DisplayFor(model => model.Product.ProductDescription)
        </div>
    </div>
    <div>
        <h4>Komentarze</h4>
        <hr />
        <ul style="list-style-type: none;margin-top:40px">
            @foreach (var coment in @Model.Comments)
            {

                <li style="display:block;margin-left:-40px;margin-bottom:10px">
                    <img src="~/Content/images/default-avatar.gif" alt="default-avatar" height="55" width="55" style="margin-bottom:1px"><span class="well" style="width:100%;margin-left:10px">
                        @if (User.IsInRole("Owner") && coment.IsVisible)
                        {
                            @Html.ActionLink("(USUŃ)", "DeleteComment", new { commentID = coment.CommentId, productID = Model.Product.ProductId })
                        }
                        <i> @coment.CommentDate @ViewBag.CommentUsers[coment.CommentId]:</i> @coment.CommentContent
                    </span>
                </li>
            }
        </ul>
        @using (Html.BeginForm("AddComment", "Products", new { id = @Model.Product.ProductId }, FormMethod.Post, null))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div style="height:30px;margin-top:15px;padding-left:14px">
                        <b> Dodaj komentarz:</b>
                    </div>
                    <div style="padding-left:14px">
                        @Html.EditorFor(model => model.Comment.CommentContent, new { htmlAttributes = new { @class = "form-control", @style = "height:150px;" } })
                        @Html.ValidationMessageFor(model => model.Comment.CommentContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10" style="text-align:left">
                        <input type="submit" value="Dodaj komentarz" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<p>
    @Html.ActionLink("Edytuj", "Edit", new { id = Model.Product.ProductId }) |
    @Html.ActionLink("Wróc do produktów", "Index")
</p>
