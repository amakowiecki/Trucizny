@model IEnumerable<Sklep_z_truciznami.ViewModels.ProductVM>

@{ if (Model != null && Model.Count<Sklep_z_truciznami.ViewModels.ProductVM>() > 0) { 
   
    
    WebGrid grid = new WebGrid(Model,ajaxUpdateContainerId:"productsGrid");
       
    
    
    <div id="productsGrid">
        @grid.GetHtml(tableStyle: "table", columns: grid.Columns(
                    grid.Column("", header: "Zdjęcie", format: x => Html.Raw(string.Format("<img style=\"height:100px; width:120px; background-position:center; background-size:cover; padding-left:10px;padding-right:10px \" src=\"/Products/Show/{0}\" />", x.ProductId))),
                    grid.Column("ProductName","Nazwa produktu", format: x =>Html.Raw(string.Format("<a href=\"/Products/Details/{0}\">{1}</a> ",x.ProductId,x.ProductName))),
                    grid.Column("Quantity", "Dostępna ilość"),
                    grid.Column("Category", "Kategoria", format: x => EnumsHelper.GetName(x.Category), canSort: false),
                    grid.Column("Price", "Cena za sztukę (w PLN)"),
                    grid.Column("Tags", "Tagi"),
                    grid.Column("Rating", "Ocena", format: x => x.Rating),
                    grid.Column("", format: x => Html.Label("Dodaj do koszyka", new { onclick = "Details(" + x.ProductId + ")", style = "cursor:pointer" }))
            ))
    </div>
    
}
else
   {
       Html.Label("Brak wpisów do wyświetlenia");
   }
}

<script type="text/javascript">
    function Details(productId) {
        $.get("AddProductToCart", { productID: productId, quantity: 1 }, function (data) { updateCart(data) });              
    };
    function updateCart(data) {
        $("#cart").replaceWith('<li id="cart">'+data+'</li>');
        
    }
</script>